apply plugin: 'c'

model {
    toolChains {
        gcc(Gcc) {
            path "/opt/x-tools/arm-none-eabi/bin"
            eachPlatform{tools->
                tools.linker.executable            "arm-none-eabi-gcc"
                tools.cCompiler.executable         "arm-none-eabi-gcc"
                tools.assembler.executable         "arm-none-eabi-as"
                tools.staticLibArchiver.executable "arm-none-eabi-ar"
                cCompiler.withArguments{args->
                    args << "-g" 
                    args << "-fno-builtin"
                    args << "-nostdlib"
                    args << "-nostartfiles"
//                    args << "-O1"
//                    args << "-Os"
                }
            }
            target("lpc1769"){
                linker.withArguments{args->
                    args << "-T" << "src/lpc17xx/lpc1769.ld"
                    args << "-nostartfiles"
                    args << "-nostdlib"
                    args << "-fno-builtin"
                }
            }
        }
    }

    platforms {
        lpc1769 {
            architecture "arm"
        }
        
    }

    components {
        lpc1769(NativeExecutableSpec) {
            targetPlatform "lpc1769"
            sources {
                c {
                    source {
                        srcDirs "src/common", "src/cortex-m3", "src/lpc17xx", "src/lpc17xx/hwdef"
                        include "**/*.c"
                    }
                    exportedHeaders {
                        srcDirs "src/common", "src/cortex-m3", "src/lpc17xx", "src/lpc17xx/hwdef", "src/cortex-m3/hwdef"
                        include "**/*.h"
                    }
                }
            }
        }
    }
}

task lpc1769Hex(type: Exec){
    commandLine '/opt/x-tools/arm-none-eabi/bin/arm-none-eabi-objcopy'
    args '-O', 'ihex', '--strip-debug', 'build/binaries/lpc1769Executable/lpc1769', 'lpc1769.hex'
}

task lpc1769Binary(type: Exec){
    commandLine '/opt/x-tools/arm-none-eabi/bin/arm-none-eabi-objcopy'
    args '-O', 'binary', '--strip-debug', 'build/binaries/lpc1769Executable/lpc1769', 'lpc1769.bin'
}

task lpc1769CreateHex(type: Exec, dependsOn: 'lpc1769Executable'){
    workingDir 'build/binaries/lpc1769Executable'
    commandLine '/opt/x-tools/arm-none-eabi/bin/arm-none-eabi-objcopy'
    args '-O', 'ihex', '--strip-debug', 'lpc1769', 'lpc1769.hex'
}

task lpc1769Reset(dependsOn: 'lpc1769CreateHex'){

    doLast{
        File reset=new File("/sys/class/gpio/gpio19/value")
        reset.write("0")
        reset.write("1")
    }
}

task lpc1769StartISP(dependsOn: 'lpc1769CreateHex'){

    //gpio 19 is the GPIO on the odroid that gets wired to RESET pin
    //gpio 24 is the GPIO on the odroid that gets wired to the ISP pin 
    doLast{
        File reset=new File("/sys/class/gpio/gpio19/value")
        File isp=new File("/sys/class/gpio/gpio24/value")
        isp.write("0")
        reset.write("0")
        reset.write("1")
    }
}

task lpc1769Load(type: Exec, dependsOn: 'lpc1769CreateHex'){
    workingDir 'build/binaries/lpc1769Executable'
    executable '/opt/x-tools/lpc21isp' 
    args  'lpc1769.hex', '/dev/ttySAC0', '115200', '14746'

    doFirst {
        File reset=new File("/sys/class/gpio/gpio19/value")
        File isp=new File("/sys/class/gpio/gpio24/value")
        isp.write("0")
        reset.write("0")
        reset.write("1")
    }
    
    doLast {
        File reset=new File("/sys/class/gpio/gpio19/value")
        File isp=new File("/sys/class/gpio/gpio24/value")
        reset.write('0')
        isp.write('1')
        reset.write('1')
    }


}

task lpc1769StartProgram(type: Exec, dependsOn: 'lpc1769Load'){
    doLast {
        File reset=new File("/sys/class/gpio/gpio19/value")
        File isp=new File("/sys/class/gpio/gpio19/value")
        reset.write('0')
        sleep(400)
        isp.write('1')
        reset.write('1')
    }
}

